# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    ActivityService:
      base-path: /
      auth: true
      endpoints:
        summary:
          display-name: Activity Summary
          method: GET
          path: /summary/activity/{user_id}
          path-parameters:
            user_id:
              type: commons.UserId
              docs: >
                User id returned by vital create user id request. 
                This id should be stored in your database against the user and used for all interactions with the vital api.
          request:
            name: GetActivitySummaryRequest
            query-parameters:
              provider:
                type: optional<string>
                docs: Provider like Oura, Strava, etc.
              start_date:
                type: string
                docs: Date from in YYYY-MM-DD or ISO formatted date time. If a date is provided without a time, the time will be set to 00:00:00
              end_date:
                type: string
                docs: Date to YYYY-MM-DD or ISO formatted date time. If a date is provided without a time, the time will be set to 23:59:59
          response: ActivitySummary
          examples:
            - path-parameters:
                user_id: 70c64d5a-ff06-4c16-b137-361b2441d86e
              query-parameters:
                provider: Oura
                start_date: "2023-01-01"
                end_date: "2023-01-25"
              response:
                body:
                  activity:
                    - source:
                        name: Oura
                        slug: oura
                        logo: https://cdn.shopify.com/s/files/1/0163/4644/7926/files/black-on-white-oura-logo.png?v=1584479070
                      date: "2023-01-27"
                      user_id: 70c64d5a-ff06-4c16-b137-361b2441d86e
                      calories_total: 100
                      calories_active: 2000
                      steps: 10000
                      daily_movement: 200
                      low: 6400
                      medium: 2000
                      high: 4500

types:
  ActivitySummary:
    properties:
      activity: list<Activity>

  Activity:
    properties:
      source:
        type: ActivitySource
        docs: Source the data has come from.
      date:
        type: string
        docs: Date for specified record
      user_id:
        type: commons.UserId
        docs: <
          User id returned by vital create user request.
          This id should be stored in your database against the user and used for all interactions with the vital api.
      user_key:
        type: optional<string>
        docs: <
          User key returned by vital create user key request.
          This key should be stored in your database against the user and used for all interactions with the vital api.
      calories_total:
        type: optional<integer>
        docs: Total energy consumption during the day including Basal Metabolic Rate in kilocalories::kilocalories
      calories_active:
        type: optional<integer>
        docs: Energy consumption caused by the physical activity of the day in kilocalories::kilocalories
      steps:
        type: optional<integer>
        docs: Total number of steps registered during the day::steps
      daily_movement:
        type: optional<integer>
        docs: Daily physical activity as equal meters i.e. amount of walking needed to get the same amount of activity::meters
      low:
        type: optional<integer>
        docs: Number of minutes during the day with low intensity activity (e.g. walking)::minutes
      medium:
        type: optional<integer>
        docs: Number of minutes during the day with medium intensity activity (e.g. walking)::minutes
      high:
        type: optional<integer>
        docs: Number of minutes during the day with high intensity activity (e.g. running)::minutes
      floors_climbed:
        type: optional<integer>
        docs: Number of floors climbed by the user::count
      timezone_offset:
        type: optional<integer>
        docs: Timezone offset from UTC as minutes. For example, EEST (Eastern European Summer Time, +3h) is 180. PST (Pacific Standard Time, -8h) is -480

  ActivitySource:
    properties:
      slug: string 
      name: string 
      logo: string